services:
  mysql:
    image: mysql:8.3.0
    container_name: mysql-container
    env_file:
      - .env
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5
  fastapi:
    build:
      context: ./portfolio-tracker
    container_name: fastapi-app
    env_file:
      - .env.portfolio-tracker
    ports:
      - "8000:8000"
    volumes:
      - ./portfolio-tracker:/app
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
  airflow-init:
    image: apache/airflow:3.0.0
    container_name: airflow-init
    env_file:
      - .env.portfolio-data-collector
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    command: bash -c "airflow db migrate && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    networks:
      - app-network
  airflow-webserver:
    image: apache/airflow:3.0.0
    container_name: airflow-webserver
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
    command: airflow api-server
    env_file:
      - .env.portfolio-data-collector
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    restart: always
    networks:
      - app-network
  airflow-scheduler:
    image: apache/airflow:3.0.0
    container_name: airflow-scheduler
    command: airflow scheduler
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - .env.portfolio-data-collector
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  airflow_dags:
  airflow_logs:
  airflow_plugins:
